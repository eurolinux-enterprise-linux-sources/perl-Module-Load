Name:           perl-Module-Load
# Epoch to compete with perl.spec
Epoch:          1
Version:        0.24
Release:        3%{?dist}
Summary:        Run-time require of both modules and files
License:        GPL+ or Artistic
Group:          Development/Libraries
URL:            http://search.cpan.org/dist/Module-Load/
Source0:        http://www.cpan.org/authors/id/B/BI/BINGOS/Module-Load-%{version}.tar.gz
BuildArch:      noarch
BuildRequires:  perl
BuildRequires:  perl(ExtUtils::MakeMaker)
BuildRequires:  perl(strict)
# Run-time:
BuildRequires:  perl(File::Spec)
# Tests:
BuildRequires:  perl(lib)
BuildRequires:  perl(Exporter)
BuildRequires:  perl(Test::More)
BuildRequires:  perl(vars)
Requires:       perl(:MODULE_COMPAT_%(eval "`perl -V:version`"; echo $version))

%description
If you consult "perldoc -f require" you will see that "require" will behave
differently when given a bare-word or a string. In the case of a string,
"require" assumes you are wanting to load a file. But in the case of
a bare-word, it assumes you mean a module.

This gives nasty overhead when you are trying to dynamically require modules
at run-time, since you will need to change the module notation to a file
notation fitting the particular platform you are on.

"load" eliminates the need for this overhead and will just DWYM.

%prep
%setup -q -n Module-Load-%{version}

%build
perl Makefile.PL INSTALLDIRS=vendor
make %{?_smp_mflags}

%install
make pure_install DESTDIR=$RPM_BUILD_ROOT
find $RPM_BUILD_ROOT -type f -name .packlist -exec rm -f {} \;
%{_fixperms} $RPM_BUILD_ROOT/*

%check
make test

%files
%doc CHANGES README
%{perl_vendorlib}/*
%{_mandir}/man3/*

%changelog
* Fri Dec 27 2013 Daniel Mach <dmach@redhat.com> - 1:0.24-3
- Mass rebuild 2013-12-27

* Fri Apr 05 2013 Petr Pisar <ppisar@redhat.com> - 1:0.24-2
- Set epoch to compete with perl.spec

* Mon Mar 18 2013 Petr Pisar <ppisar@redhat.com> 0.24-1
- Specfile autogenerated by cpanspec 1.78.
